plugins {
    id 'java'
}

group 'com.icodici'
version '3.9.7'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url = "https://maven.universablockchain.com/"
    }

}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.9'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.9.1'
    compile project(':universa_core')
}

// Just build the class .jar itself
jar {
    // Keep jar clean:
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    archiveName = 'uninode.jar'

    manifest {
        attributes 'Main-Class': 'com.icodici.universa.node2.Main',
                'Class-Path': configurations.runtime.files.collect { "$it.name" }.join(' ')
    }
}

task buildMultiJar(type: Copy) {
    dependsOn build
    into "$buildDir/output"
    from configurations.runtime
    from jar
}

task buildMultiJar2(type: Copy) {
    dependsOn build
    into "$buildDir/output"
    from configurations.runtime
    from jar
}


def configFilePath = "src/main/java/com/icodici/universa/node2"
def configTestFilePath = "src/test_config"
def configBackupFilePath = "config_backup"
def configFileName = "Config.java"


task testConfigRestore(type: Copy) {
    from "$buildDir/" + configBackupFilePath
    into configFilePath
    include configFileName
}

task buildMultiJarTestConfig(type: Task) {

    println "test config"
    doFirst {
        copy {
            from configFilePath
            into "$buildDir/" + configBackupFilePath
            include configFileName
        }

        copy {
            from configTestFilePath
            into configFilePath
            include configFileName
        }
    }

    finalizedBy buildMultiJar2
    buildMultiJar2.finalizedBy testConfigRestore
}





task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar with all dependencies',
                'Implementation-Version': version,
                'Main-Class': 'com.icodici.universa.node2.Main'
    }
//    baseName = project.name + '-all'
    archiveName = 'uninode-all.jar'
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    duplicatesStrategy 'exclude'
    zip64 true
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task fatJar2(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar with all dependencies',
                'Implementation-Version': version,
                'Main-Class': 'com.icodici.universa.node2.Main'
    }
//    baseName = project.name + '-all'
    archiveName = 'uninode-all.jar'
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    duplicatesStrategy 'exclude'
    zip64 true
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


task fatJarTestConfig(type: Task) {

    doFirst {
        copy {
            from configFilePath
            into "$buildDir/" + configBackupFilePath
            include configFileName
        }

        copy {
            from configTestFilePath
            into configFilePath
            include configFileName
        }
    }

    finalizedBy fatJar2
    fatJar2.finalizedBy testConfigRestore
}
