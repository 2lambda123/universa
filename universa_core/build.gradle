group 'com.icodici'
version '3.9.16'


apply plugin: 'java'
apply plugin: 'maven-publish'

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html4', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }

    repositories {
        maven {
            url = "https://maven.universablockchain.com/"
            credentials {
                username System.getProperty("user")
                password System.getProperty("password")
            }
        }
    }
}


sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url = "https://maven.universablockchain.com/"
    }

}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    compile group: 'org.yaml', name: 'snakeyaml', version: '1.18'
    compile group: 'com.icodici', name: 'nanohttpd', version: '2.1.0'
    compile project(':common_tools')
    compile project(':crypto')

    processResources
    processTestResources
}


task contractsServiceJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    include("**/ContractsService.java")
    destinationDir = file("../docs/ContractsService/javadoc")
}

task nodeJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    include("**/node2/Node.java")
    destinationDir = file("../docs/node/javadoc")
}

task allJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.compileClasspath
    options.doclet = "ExcludeDoclet"
    options.docletpath = [file("ExcludeDoclet.jar")]
    options.showFromProtected()
    destinationDir = file("../docs/javadoc")
    delete fileTree("../docs/javadoc")
}